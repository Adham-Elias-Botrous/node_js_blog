{"version":3,"sources":["components/Header.js","components/Home.js","components/Login.js","components/Register.js","components/CreatePost.js","components/ViewPost.js","components/EditPost.js","components/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","logout","localStorage","removeItem","axios","defaults","headers","common","authorization","props","history","push","getItem","className","to","onClick","this","Component","withRouter","Home","fetchPosts","get","then","res","setState","posts","data","error","isLoading","catch","err","response","state","length","map","post","key","_id","title","author","name","content","substr","Login","onChangeHandler","event","target","id","value","onSubmitHandler","preventDefault","email","password","setItem","token","Authorization","message","renderError","onSubmit","type","onChange","required","Register","registered","CreatePost","ViewPost","deletePost","delete","onChangeComment","e","comment","commentError","onSubmitComment","match","params","comments","renderActions","renderComments","renderCommentForm","postId","EditPost","put","authorId","PageNotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3274b87b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Header extends Component {\n  logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('_id');\n    axios.defaults.headers.common = { authorization: '' };\n    this.props.history.push('/');\n  };\n  render() {\n    if (localStorage.getItem('token')) {\n      return (\n        <div className=\"navbar\">\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/post/create\">Create Post</Link>\n            </li>\n            <li>\n              <Link to=\"#logout\" onClick={this.logout}>\n                Log Out\n              </Link>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n    return (\n      <div className=\"navbar\">\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/login\">Log In</Link>\n          </li>\n          <li>\n            <Link to=\"/register\">Register</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default withRouter(Header);\n","import React, { Fragment, Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      error: '',\n      isLoading: true\n    };\n  }\n  fetchPosts = () => {\n    axios\n      .get('/api/posts')\n      .then(res => {\n        this.setState({ posts: res.data, error: '', isLoading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err.response.data, isLoading: false });\n      });\n  };\n  componentDidMount() {\n    this.fetchPosts();\n  }\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <h4>\n          Please wait...\n          <br /> Loding...\n        </h4>\n      );\n    }\n    if (this.state.error) {\n      return <h4>{this.state.error}</h4>;\n    }\n\n    if (this.state.posts.length < 1) {\n      return <h4>There is NOT any post yet.</h4>;\n    }\n    return this.state.posts.map(post => {\n      return (\n        <Fragment key={post._id}>\n          <div className=\"row\">\n            <div className=\"column \">\n              <h4>{post.title}</h4>\n              <h6 className=\"title\">\n                {post.author._id === localStorage.getItem('_id')\n                  ? post.author.name + ' (Me)'\n                  : post.author.name}\n              </h6>\n              <p>{post.content.substr(0, 120)}.....</p>\n\n              <Link to={'/post/view/' + post._id}>\n                <button className=\"button-primary button-outline\">View</button>\n              </Link>\n            </div>\n          </div>\n          <hr />\n        </Fragment>\n      );\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    if (localStorage.getItem('token')) {\n      this.props.history.push('/');\n    }\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n  }\n  onChangeHandler = event => {\n    this.setState({ [event.target.id]: event.target.value, error: '' });\n  };\n  onSubmitHandler = event => {\n    event.preventDefault();\n    let data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    axios\n      .post('/api/auth', data)\n      .then(res => {\n        localStorage.setItem('token', res.data.token);\n        localStorage.setItem('_id', res.data.id);\n        axios.defaults.headers.common = {\n          Authorization: `Bearer ${res.data.token}`\n        };\n\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        this.setState({ error: err.response.data.message });\n      });\n  };\n  renderError = () => {\n    return this.state.error ? (\n      <blockquote>{this.state.error}</blockquote>\n    ) : null;\n  };\n  render() {\n    return (\n      <div className=\"column column-50 column-offset-25\">\n        <h4>Log in</h4>\n        <hr />\n        {this.renderError()}\n        <form onSubmit={this.onSubmitHandler}>\n          <label>Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={this.state.email}\n            onChange={this.onChangeHandler}\n            required\n          />\n          <label>Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeHandler}\n            required\n          />\n          <input className=\"button-primary\" type=\"submit\" value=\"Log In\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport axios from 'axios';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    if (localStorage.getItem('token')) {\n      this.props.history.push('/');\n    }\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      error: '',\n      registered: false\n    };\n  }\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.id]: event.target.value, error: '' });\n  };\n  onSubmitHandler = event => {\n    event.preventDefault();\n    let data = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    axios\n      .post('/api/register', data)\n      .then(res => {\n        this.setState({ registered: true });\n        axios.defaults.headers.common = {\n          Authorization: `Bearer ${res.data.token}`\n        };\n      })\n      .catch(err => {\n        this.setState({ error: err.response.data.message });\n      });\n  };\n  renderError = () => {\n    return this.state.error ? (\n      <blockquote>{this.state.error}</blockquote>\n    ) : null;\n  };\n  render() {\n    if (this.state.registered) {\n      return (\n        <div className=\"column\">\n          <p>\n            Welcome <strong>{this.state.name}</strong>:\n            <br />\n            You are registered successfully.\n            <br />\n            You can log in using your email\n            <strong> {this.state.email}</strong> and the password.\n            <br /> Go to:\n            <Link to=\"/login\">\n              <strong className=\"title\"> Log In</strong>\n            </Link>\n          </p>\n        </div>\n      );\n    }\n    return (\n      <div className=\"column column-50 column-offset-25\">\n        {this.setState.registered === true ? <h1>registered</h1> : null}\n        <h4>Create new account</h4>\n        <hr />\n        {this.renderError()}\n        <form onSubmit={this.onSubmitHandler}>\n          <label>Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={this.state.name}\n            onChange={this.onChangeHandler}\n          />\n          <label>Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={this.state.email}\n            onChange={this.onChangeHandler}\n          />\n          <label>Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeHandler}\n          />\n          <input className=\"button-primary\" type=\"submit\" value=\"Register\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Register);\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    if (!localStorage.getItem('token')) {\n      this.props.history.push('/login');\n    }\n    this.state = {\n      title: '',\n      content: '',\n      error: ''\n    };\n  }\n  onChangeHandler = event => {\n    this.setState({ [event.target.id]: event.target.value, error: '' });\n  };\n  onSubmitHandler = event => {\n    event.preventDefault();\n    let token = localStorage.getItem('token');\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\n\n    let data = {\n      title: this.state.title,\n      content: this.state.content\n    };\n\n    axios\n      .post('/api/posts', data)\n      .then(res => {\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        this.setState({ error: err.response.data.message });\n      });\n  };\n  renderError = () => {\n    return this.state.error ? (\n      <blockquote>{this.state.error}</blockquote>\n    ) : null;\n  };\n  render() {\n    return (\n      <div className=\"column column-50 column-offset-25\">\n        <h4>Create new post.</h4>\n        <hr />\n        {this.renderError()}\n        <form onSubmit={this.onSubmitHandler}>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={this.state.title}\n            onChange={this.onChangeHandler}\n          />\n          <label>Content</label>\n          <textarea\n            type=\"text\"\n            id=\"content\"\n            value={this.state.content}\n            onChange={this.onChangeHandler}\n          />\n          <input className=\"button-primary\" type=\"submit\" value=\"Create\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: {},\r\n      error: '',\r\n      comment: '',\r\n      commentError: ''\r\n    };\r\n  }\r\n\r\n  deletePost = () => {\r\n    let token = localStorage.getItem('token');\r\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n\r\n    axios\r\n      .delete('/api/posts/' + this.state.post._id)\r\n      .then(res => {\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.response.data.message\r\n        });\r\n      });\r\n  };\r\n  onChangeComment = e => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n      commentError: ''\r\n    });\r\n  };\r\n  onSubmitComment = e => {\r\n    e.preventDefault();\r\n    let token = localStorage.getItem('token');\r\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n    let data = { content: this.state.comment };\r\n    axios\r\n      .post('/api/comments/' + this.props.match.params.id, data)\r\n      .then(res => {\r\n        let post = this.state.post;\r\n        post.comments.push({\r\n          _id: res.data._id,\r\n          content: res.data.content,\r\n          author: { _id: localStorage.getItem('_id') }\r\n        });\r\n        this.setState({\r\n          post: post,\r\n          commentError: '',\r\n          comment: ''\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          commentError: <blockquote>{err.response.data.message}</blockquote>\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let postId = this.props.match.params.id;\r\n    axios\r\n      .get('/api/posts/' + postId)\r\n      .then(res => {\r\n        this.setState({ post: res.data, error: '' });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ error: err.response.data.message });\r\n      });\r\n  }\r\n\r\n  renderActions = () => {\r\n    if (\r\n      localStorage.getItem('token') &&\r\n      localStorage.getItem('_id') === this.state.post.author._id\r\n    ) {\r\n      return (\r\n        <span>\r\n          <Link to={'/post/edit/' + this.state.post._id}>\r\n            <button>Edit</button>\r\n          </Link>\r\n          <button onClick={this.deletePost}>Delete</button>\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n  renderComments = () => {\r\n    let comments = <p>There is NOT any comment yet.</p>;\r\n    if (this.state.post.comments.length) {\r\n      comments = this.state.post.comments.map(comment => {\r\n        return (\r\n          <p key={comment._id} className=\"border_white\">\r\n            <strong className=\"title\">\r\n              {comment.author._id === localStorage.getItem('_id')\r\n                ? 'Me'\r\n                : comment.author.name}\r\n            </strong>\r\n            <br />\r\n            {comment.content}\r\n          </p>\r\n        );\r\n      });\r\n    }\r\n    return comments;\r\n  };\r\n\r\n  renderCommentForm = () => {\r\n    if (!localStorage.getItem('token')) {\r\n      return <p>To write a comment, you have to log in.</p>;\r\n    }\r\n    return (\r\n      <div className=\"bg_wight\">\r\n        <h4>Add Comment</h4>\r\n        {this.state.commentError}\r\n        <form onSubmit={this.onSubmitComment}>\r\n          <textarea\r\n            value={this.state.comment}\r\n            onChange={this.onChangeComment}></textarea>\r\n          <input className=\"button-primary\" type=\"submit\" value=\"Send\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <blockquote>{this.state.error}</blockquote>;\r\n    }\r\n    if (!this.state.post.title) {\r\n      return (\r\n        <h4>\r\n          Please wait...\r\n          <br /> Loding...\r\n        </h4>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"column \">\r\n        <div className=\"post_bg\">\r\n          <h4>{this.state.post.title}</h4>\r\n          <h6 className=\"title\">\r\n            {this.state.post.author._id === localStorage.getItem('_id')\r\n              ? this.state.post.author.name + ' (Me)'\r\n              : this.state.post.author.name}\r\n          </h6>\r\n          <p>{this.state.post.content}</p>\r\n          {this.renderActions()}\r\n        </div>\r\n        <hr />\r\n        <h4>Comments</h4>\r\n        {this.renderComments()}\r\n        {this.renderCommentForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props);\n    if (!localStorage.getItem('token')) {\n      this.props.history.push('/login');\n    }\n    this.state = {\n      title: '',\n      content: '',\n      authorId: '',\n      isLoading: true,\n      error: ''\n    };\n  }\n  onChangeHandler = event => {\n    this.setState({ [event.target.id]: event.target.value, error: '' });\n  };\n  onSubmitHandler = event => {\n    event.preventDefault();\n\n    let token = localStorage.getItem('token');\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\n\n    let data = {\n      title: this.state.title,\n      content: this.state.content\n    };\n\n    axios\n      .put('/api/posts/' + this.props.match.params.id, data)\n      .then(res => {\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        this.setState({ error: err.response.data.message });\n      });\n  };\n  componentDidMount() {\n    axios.get('/api/posts/' + this.props.match.params.id).then(res => {\n      this.setState({\n        title: res.data.title,\n        content: res.data.content,\n        authorId: res.data.author._id,\n        isLoading: false\n      });\n    });\n  }\n  renderError = () => {\n    return this.state.error ? (\n      <blockquote>{this.state.error}</blockquote>\n    ) : null;\n  };\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <h4>\n          Please wait...\n          <br /> Loding...\n        </h4>\n      );\n    }\n\n    return (\n      <div className=\"column column-50 column-offset-25\">\n        <h4>Edit Post</h4>\n        <hr />\n        {this.renderError()}\n        <form onSubmit={this.onSubmitHandler}>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={this.state.title}\n            onChange={this.onChangeHandler}\n          />\n          <label>Content</label>\n          <textarea\n            type=\"text\"\n            id=\"content\"\n            value={this.state.content}\n            onChange={this.onChangeHandler}\n          />\n          <input className=\"button-primary\" type=\"submit\" value=\"Edit Post\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PageNotFound = () => {\n  return (\n    <blockquote>\n      <h3>Page Not Found</h3>\n    </blockquote>\n  );\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport axios from 'axios';\nimport CreatePost from './components/CreatePost';\nimport ViewPost from './components/ViewPost';\nimport EditPost from './components/EditPost';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem('token');\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\n  }\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Header></Header>\n            <div className=\"container\">\n              <div>\n                <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/register\" component={Register} />\n                  <Route exact path=\"/post/create\" component={CreatePost} />\n                  <Route exact path=\"/post/view/:id\" component={ViewPost} />\n                  <Route exact path=\"/post/edit/:id\" component={EditPost} />\n                  <Route path=\"*\" component={PageNotFound} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'milligram/dist/milligram.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}